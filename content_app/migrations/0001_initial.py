# Generated by Django 5.2.6 on 2025-09-29 15:10

import content_app.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


def create_superuser(apps, schema_editor):
    from django.contrib.auth.models import User
    if not User.objects.filter(username='admin').exists():
        User.objects.create_superuser(
            username='admin',
            email='nickydemb@gmail.com',
            password='admin123'
        )

def delete_superuser(apps, schema_editor):
    from django.contrib.auth.models import User
    User.objects.filter(username='admin').delete()

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Book Title', max_length=255)),
                ('author', models.CharField(help_text='Author Name', max_length=150)),
                ('description', models.TextField(help_text='Book Description')),
                ('summary', models.TextField(help_text='Book Summary')),
                ('img', models.ImageField(help_text='Book Image(JPG or PNG, max 1MB)', upload_to='books/%Y/%m', validators=[content_app.validators.validate_image_size, content_app.validators.validate_image_extension])),
                ('price', models.DecimalField(decimal_places=2, help_text='Book Price', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('purchase_link', models.URLField(help_text='Purchase Link')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(help_text='Episode link', max_length=150)),
                ('guest_name', models.CharField(help_text='Guest name', max_length=100)),
                ('title', models.CharField(help_text='Episode title', max_length=255)),
                ('summarized_title', models.CharField(help_text='Summarized episode title', max_length=150)),
                ('description', models.TextField(help_text='Episode description')),
                ('img', models.ImageField(help_text='Episode Image(JPG or PNG, max 1MB)', upload_to='episodes/%Y/%m', validators=[content_app.validators.validate_image_size, content_app.validators.validate_image_extension])),
                ('pub_date', models.DateField(default=django.utils.timezone.now, help_text='Published Date')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Episode',
                'verbose_name_plural': 'Episodes',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Event Title', max_length=255)),
                ('host', models.CharField(help_text='Event Host', max_length=150)),
                ('description', models.TextField(help_text='Event Description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Event Price', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('summary', models.TextField(help_text='Event Summary')),
                ('event_date', models.DateTimeField(help_text='Event Date & Time')),
                ('location', models.CharField(help_text='Event Location', max_length=255)),
                ('img', models.ImageField(help_text='Event Image(JPG or PNG, max 1MB)', upload_to='events/%Y/%m', validators=[content_app.validators.validate_image_size, content_app.validators.validate_image_extension])),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Partner Name', max_length=150)),
                ('logo', models.ImageField(help_text='Partner Logo(JPG or PNG, max 1MB)', upload_to='partners/%Y/%m', validators=[content_app.validators.validate_image_size, content_app.validators.validate_image_extension])),
                ('website', models.URLField(help_text='Partner Website')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partners',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=150)),
                ('country', models.CharField(help_text='Country', max_length=100)),
                ('img', models.ImageField(help_text='Testimonial Image(JPG or PNG, max 1MB)', upload_to='testimonials/%Y/%m', validators=[content_app.validators.validate_image_size, content_app.validators.validate_image_extension])),
                ('testimony', models.TextField(help_text='Testimonial Content')),
                ('testimony_date', models.DateField(default=django.utils.timezone.now, help_text='Testimonial Date')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-testimony_date'],
            },
        ),
        migrations.RunPython(create_superuser, delete_superuser),
    ]
